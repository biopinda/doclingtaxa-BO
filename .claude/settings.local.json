{
  "permissions": {
    "allow": [
      "Bash(powershell.exe:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial project setup with specification for PDF monograph conversion\n\nCreated feature specification (001-espe-projeto-vai) for converting fauna and flora monographs from PDF to structured JSON format. System will:\n- Scan directories for PDF files\n- Extract hierarchical taxonomic data (Kingdom through Species)\n- Store structured data in MongoDB\n- Focus on species-level descriptions only\n- Extract core fields: scientific name, description, Forma de Vida, Substrato, DomÃ­nios FitogeogrÃ¡ficos, Tipos de VegetaÃ§Ã£o, DistribuiÃ§Ã£o GeogrÃ¡fica\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git ls-tree:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nT001: Create project structure per plan.md\n\n- Created directory structure: src/{models,extractors,storage,cli,lib}, tests/{contract,integration,unit}\n- Created pyproject.toml with Python 3.11+ requirements\n- Added dependencies: docling, pymongo, pydantic>=2.0, python-dotenv, click, rich, loguru\n- Added dev dependencies: pytest, pytest-mongodb, pytest-cov, black, ruff\n- Created .env.template with MongoDB configuration\n- Created comprehensive README.md with:\n  - Installation instructions\n  - Quick start guide\n  - CLI usage documentation\n  - Darwin Core schema overview\n  - Development guidelines\n  - MongoDB query examples\n\nTask completed as specified in specs/main/tasks.md\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nUpdate MongoDB configuration to production server\n\nUpdated all documentation with production MongoDB credentials:\n- Connection URI: mongodb://dwc2json:VLWQ8Bke65L52hfBM635@192.168.1.10:27017/?authSource=admin\n- Database: dwc2json\n- Collection: monografias\n\nFiles updated:\n- .env.template: Production MongoDB connection string\n- README.md: Updated installation, connection verification, query examples\n- specs/main/quickstart.md: Updated all MongoDB references and validation queries\n\nAll examples now use correct database name (dwc2json) and collection name (monografias).\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nUpdate documentation to use monografias test directory\n\nUpdated all examples and test scenarios to reference the `monografias/` directory for test PDFs:\n- README.md: Quick Start section now shows monografias directory usage\n- README.md: Output examples updated with monografias paths\n- specs/main/quickstart.md: All 6 scenarios updated to use monografias directory\n- Removed references to sample_pdfs, test_data, batch_test, error_test\n\nThis aligns with user specification that test monographs will be in the monografias/ directory.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "WebFetch(domain:monografiasfloradobrasil.jbrj.gov.br)",
      "Bash(Test-Path venv)",
      "Bash(python:*)",
      "Bash(venv/Scripts/python.exe -m pip install:*)",
      "Bash(venv/Scripts/pip.exe install:*)",
      "Bash(venv/Scripts/python.exe -c \"import doclingtaxaBO; print(''âœ“ Package installed successfully'')\")",
      "Bash(venv/Scripts/pytest.exe --version)",
      "Bash(venv/Scripts/black.exe:*)",
      "Bash(venv/Scripts/ruff.exe:*)",
      "Bash(venv/Scripts/python.exe -c \"import src; print(''âœ“ Package module created successfully'')\")",
      "Bash(venv/Scripts/python.exe -c \"import src.models, src.extractors, src.storage, src.cli, src.lib; print(''OK'')\")",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:github.com)"
    ],
    "deny": [],
    "ask": []
  }
}